// Code generated by "enumer -type=TodoItemStatus"; DO NOT EDIT.

package models

import (
	"fmt"
	"strings"
)

const _TodoItemStatusName = "BacklogInProgressReviewDone"

var _TodoItemStatusIndex = [...]uint8{0, 7, 17, 23, 27}

const _TodoItemStatusLowerName = "backloginprogressreviewdone"

func (i TodoItemStatus) String() string {
	if i < 0 || i >= TodoItemStatus(len(_TodoItemStatusIndex)-1) {
		return fmt.Sprintf("TodoItemStatus(%d)", i)
	}
	return _TodoItemStatusName[_TodoItemStatusIndex[i]:_TodoItemStatusIndex[i+1]]
}

// An "invalid array index" compiler error signifies that the constant values have changed.
// Re-run the stringer command to generate them again.
func _TodoItemStatusNoOp() {
	var x [1]struct{}
	_ = x[Backlog-(0)]
	_ = x[InProgress-(1)]
	_ = x[Review-(2)]
	_ = x[Done-(3)]
}

var _TodoItemStatusValues = []TodoItemStatus{Backlog, InProgress, Review, Done}

var _TodoItemStatusNameToValueMap = map[string]TodoItemStatus{
	_TodoItemStatusName[0:7]:        Backlog,
	_TodoItemStatusLowerName[0:7]:   Backlog,
	_TodoItemStatusName[7:17]:       InProgress,
	_TodoItemStatusLowerName[7:17]:  InProgress,
	_TodoItemStatusName[17:23]:      Review,
	_TodoItemStatusLowerName[17:23]: Review,
	_TodoItemStatusName[23:27]:      Done,
	_TodoItemStatusLowerName[23:27]: Done,
}

var _TodoItemStatusNames = []string{
	_TodoItemStatusName[0:7],
	_TodoItemStatusName[7:17],
	_TodoItemStatusName[17:23],
	_TodoItemStatusName[23:27],
}

// TodoItemStatusString retrieves an enum value from the enum constants string name.
// Throws an error if the param is not part of the enum.
func TodoItemStatusString(s string) (TodoItemStatus, error) {
	if val, ok := _TodoItemStatusNameToValueMap[s]; ok {
		return val, nil
	}

	if val, ok := _TodoItemStatusNameToValueMap[strings.ToLower(s)]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to TodoItemStatus values", s)
}

// TodoItemStatusValues returns all values of the enum
func TodoItemStatusValues() []TodoItemStatus {
	return _TodoItemStatusValues
}

// TodoItemStatusStrings returns a slice of all String values of the enum
func TodoItemStatusStrings() []string {
	strs := make([]string, len(_TodoItemStatusNames))
	copy(strs, _TodoItemStatusNames)
	return strs
}

// IsATodoItemStatus returns "true" if the value is listed in the enum definition. "false" otherwise
func (i TodoItemStatus) IsATodoItemStatus() bool {
	for _, v := range _TodoItemStatusValues {
		if i == v {
			return true
		}
	}
	return false
}
